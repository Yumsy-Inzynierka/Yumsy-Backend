// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Yumsy_Backend.Persistence.DbContext;

#nullable disable

namespace Yumsy_Backend.Persistence.Migrations
{
    [DbContext(typeof(SupabaseDbContext))]
    [Migration("20250923185034_MakeCreatedFromIdNullableInShoppingListTable")]
    partial class MakeCreatedFromIdNullableInShoppingListTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CommentedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<int>("LikesCount")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentCommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.CommentLike", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("comment_like");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<decimal>("Carbohydrates100g")
                        .HasColumnType("numeric");

                    b.Property<decimal>("EnergyKcal100g")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Fat100g")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Fiber100g")
                        .HasColumnType("numeric");

                    b.Property<string>("MainCategory")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Proteins100g")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Salt100g")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SearchScore")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Sugars100g")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("ingredient");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.IngredientPost", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("IngredientId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("ingredient_post");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.IngredientShoppingList", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("IngredientId", "ShoppingListId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ingredient_shopping_list");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Like", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("like");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CommentsCount")
                        .HasColumnType("integer");

                    b.Property<int>("CookingTime")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<int>("LikesCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SavedCount")
                        .HasColumnType("integer");

                    b.Property<int>("SharedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.PostImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("post_image");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.PostTag", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("post_tag");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.QuizQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("quiz_question");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Recommendation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("recommendation");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.RecommendationTag", b =>
                {
                    b.Property<Guid>("RecommendationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.HasKey("RecommendationId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("recommendation_tag");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Saved", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SavedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("saved");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.ShoppingList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedFromId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedFromId");

                    b.HasIndex("UserId");

                    b.ToTable("shopping_list");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Step", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("StepNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("step");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Emote")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("tag");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("character varying(320)");

                    b.Property<int>("FollowersCount")
                        .HasColumnType("integer");

                    b.Property<int>("FollowingCount")
                        .HasColumnType("integer");

                    b.Property<string>("ProfileName")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text");

                    b.Property<int>("RecipesCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.UserFollower", b =>
                {
                    b.Property<Guid>("FollowingId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FollowerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FollowedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FollowingId", "FollowerId");

                    b.HasIndex("FollowerId");

                    b.ToTable("user_follower");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Comment", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Comment", "ParentComment")
                        .WithMany("ChildComments")
                        .HasForeignKey("ParentCommentId");

                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentComment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.CommentLike", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Comment", "Comment")
                        .WithMany("CommentLikes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "User")
                        .WithMany("CommentLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.IngredientPost", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Ingredient", "Ingredient")
                        .WithMany("IngredientPosts")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.Post", "Post")
                        .WithMany("IngredientPosts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.IngredientShoppingList", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Ingredient", "Ingredient")
                        .WithMany("IngredientShoppingLists")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.ShoppingList", "ShoppingList")
                        .WithMany("IngredientShoppingLists")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Like", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Post", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "CreatedBy")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.PostImage", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Post", "Post")
                        .WithMany("PostImages")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.PostTag", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.QuizQuestion", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Tag", "Tag")
                        .WithMany("QuizQuestions")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Recommendation", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "User")
                        .WithMany("Recommendations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.RecommendationTag", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Recommendation", "Recommendation")
                        .WithMany("RecommendationTags")
                        .HasForeignKey("RecommendationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.Tag", "Tag")
                        .WithMany("RecommendationTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recommendation");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Saved", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Post", "Post")
                        .WithMany("Saved")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "User")
                        .WithMany("Saved")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.ShoppingList", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Post", "CreatedFrom")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("CreatedFromId");

                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "User")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedFrom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Step", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.Post", "Post")
                        .WithMany("Steps")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.UserFollower", b =>
                {
                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "Follower")
                        .WithMany("Followings")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Yumsy_Backend.Persistence.Models.User", "Following")
                        .WithMany("Followers")
                        .HasForeignKey("FollowingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Follower");

                    b.Navigation("Following");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Comment", b =>
                {
                    b.Navigation("ChildComments");

                    b.Navigation("CommentLikes");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Ingredient", b =>
                {
                    b.Navigation("IngredientPosts");

                    b.Navigation("IngredientShoppingLists");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("IngredientPosts");

                    b.Navigation("Likes");

                    b.Navigation("PostImages");

                    b.Navigation("PostTags");

                    b.Navigation("Saved");

                    b.Navigation("ShoppingLists");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Recommendation", b =>
                {
                    b.Navigation("RecommendationTags");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.ShoppingList", b =>
                {
                    b.Navigation("IngredientShoppingLists");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.Tag", b =>
                {
                    b.Navigation("PostTags");

                    b.Navigation("QuizQuestions");

                    b.Navigation("RecommendationTags");
                });

            modelBuilder.Entity("Yumsy_Backend.Persistence.Models.User", b =>
                {
                    b.Navigation("CommentLikes");

                    b.Navigation("Comments");

                    b.Navigation("Followers");

                    b.Navigation("Followings");

                    b.Navigation("Likes");

                    b.Navigation("Posts");

                    b.Navigation("Recommendations");

                    b.Navigation("Saved");

                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
